// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dischi.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artisti");
                });

            modelBuilder.Entity("Canzone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiscoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titolo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("DiscoId");

                    b.ToTable("Canzoni");
                });

            modelBuilder.Entity("CanzonePlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CanzoneId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomePlaylist")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CanzoneId");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("Disco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Anno")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenereId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Prezzo")
                        .HasColumnType("REAL");

                    b.Property<string>("Titolo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.HasIndex("GenereId");

                    b.ToTable("Dischi");
                });

            modelBuilder.Entity("Genere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Generi");
                });

            modelBuilder.Entity("Canzone", b =>
                {
                    b.HasOne("Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Disco", "Disco")
                        .WithMany()
                        .HasForeignKey("DiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");

                    b.Navigation("Disco");
                });

            modelBuilder.Entity("CanzonePlaylist", b =>
                {
                    b.HasOne("Canzone", "Canzone")
                        .WithMany()
                        .HasForeignKey("CanzoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Canzone");
                });

            modelBuilder.Entity("Disco", b =>
                {
                    b.HasOne("Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genere", "Genere")
                        .WithMany()
                        .HasForeignKey("GenereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artista");

                    b.Navigation("Genere");
                });
#pragma warning restore 612, 618
        }
    }
}
